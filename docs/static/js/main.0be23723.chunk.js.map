{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","hellpers/startLoadFileUrl.js","actions/notes.js","components/note/NotesAppBar.js","hooks/useForm.js","components/note/NotesScreen.js","components/journal/NothingtSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","actions/ui.js","actions/auth.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","Routers/AuthRouter.js","Routers/PrivateRouter.js","Routers/PublicRoute.js","hellpers/loadNotes.js","Routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","startLoadFileUrl","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","clouResp","secure_url","activeNote","id","note","type","payload","addNewNote","setNotes","notes","startSaveNote","dispatch","getState","uid","url","noteToFirestore","doc","update","reloadNote","Swal","fire","title","deleteNote","NotesAppBar","useSelector","state","active","useDispatch","className","style","display","onChange","e","target","files","noteActive","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startLoadinFile","name","onClick","document","querySelector","click","undefined","useForm","initialState","useState","formValues","setValues","reset","newFormState","handleInputChange","value","NotesScreen","handleImputChange","date","activeId","useRef","noteDate","moment","useEffect","current","format","placeholder","autoComplete","src","alt","delete","startDeleteNote","NothingtSelected","JournalEntry","backgroundImage","JournalEntries","map","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","message","logout","Sidebar","estadoSidebar","setstate","handleChangeStateSidebar","signOut","newNote","Date","getTime","collection","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startLoginWithPasswordEmailName","AuthRouter","exact","path","component","PrivateRouter","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PublicRoute","loadNotes","get","notesSnap","forEach","snapHijo","push","data","AppRouter","gloLoading","setgloLoading","inLogin","setinLogin","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0be23723.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBJgAZ5C6WTsqKe83rn45d1i81YW-joyzo\",\r\n    authDomain: \"reactappcurso-91630.firebaseapp.com\",\r\n    projectId: \"reactappcurso-91630\",\r\n    storageBucket: \"reactappcurso-91630.appspot.com\",\r\n    messagingSenderId: \"217942529061\",\r\n    appId: \"1:217942529061:web:e9648b4bae4e2eeb869bcc\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n};\r\n","\r\nexport const types = {\r\n\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n\r\n    uiSetError: '[UI] setError',\r\n    uiRemoveError: '[UI] removeError',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[NOTES]  New Note',\r\n    notesActive: '[NOTES]  Set active note',\r\n    notesLoad: '[NOTES]  Load Note',\r\n    notesUpdate: '[NOTES]  Update Note',\r\n    notesFileUrl: '[NOTES]  Update Image Url',\r\n    notesDelete: '[NOTES]  Delete Note',\r\n    notesLogoutCleanin: '[NOTES]  Cleaning Logout Note'\r\n};","\r\n\r\nexport const startLoadFileUrl = async (file) => {\r\n\r\n    const ClouUrl = 'https://api.cloudinary.com/v1_1/kevinmark/upload'\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n\r\n    try {\r\n\r\n        const resp = await fetch(ClouUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n\r\n        if (resp.ok) {\r\n            const clouResp = await resp.json();\r\n            return clouResp.secure_url;\r\n        } else {\r\n            throw await resp.json()\r\n        }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n\r\n\r\n};","import Swal from \"sweetalert2\";\r\n\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { types } from \"../types/types\";\r\nimport { startLoadFileUrl } from \"../hellpers/startLoadFileUrl\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote))\r\n        dispatch(addNewNote(doc.id, newNote))\r\n\r\n\r\n    }\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n\r\n\r\n        id,\r\n        ...note\r\n    }\r\n\r\n\r\n\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const setNotes = (notes) => ({\r\n\r\n    type: types.notesLoad,\r\n    payload: notes\r\n\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n\r\n        const noteToFirestore = { ...note };\r\n\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n\r\n\r\n        dispatch(reloadNote(note.id, noteToFirestore))\r\n        Swal.fire('Saved', note.title, 'success')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport const reloadNote = (id, note) => ({\r\n\r\n\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadinFile = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: noteActive } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await startLoadFileUrl(file);\r\n\r\n        noteActive.url = fileUrl;\r\n        dispatch(startSaveNote(noteActive));\r\n\r\n        Swal.close();\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const startDeleteNote = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n\r\n        dispatch(deleteNote(id))\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const deleteNote = (id) => ({\r\n\r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n})\r\n\r\n\r\n\r\nexport const notesLogout = (uid) => ({\r\n\r\n    type: types.notesLogoutCleanin,\r\n    payload: uid\r\n\r\n\r\n});","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { startSaveNote, startLoadinFile } from '../../actions/notes';\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const handlePicutureSave = () => {\r\n        document.querySelector('#fileLoad').click()\r\n    };\r\n\r\n\r\n    const handleImputOnChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startLoadinFile(file))\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n\r\n    const dispatch = useDispatch()\r\n    const handleSave = () => {\r\n        if (note.body === '' || note.title === '' || note.url === undefined) {\r\n\r\n            Swal.fire('¡Tittle, body and picture is required!', 'alert')\r\n        } else { dispatch(startSaveNote(note)); }\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n\r\n\r\n\r\n            <input\r\n                type='file'\r\n                id='fileLoad'\r\n                style={{ display: 'none' }}\r\n                onChange={handleImputOnChange}\r\n                name='file'\r\n\r\n            />\r\n\r\n\r\n            <div>\r\n                <button\r\n                    onClick={handlePicutureSave}\r\n                    className=\"btn\">\r\n                    Picture\r\n                 </button>\r\n                <button\r\n\r\n                    onClick={handleSave}\r\n                    className=\"btn\">\r\n                    Save\r\n                 </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [formValues, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [formValues, handleInputChange, reset];\r\n\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote, startDeleteNote } from '../../actions/notes'\r\n\r\nimport moment from \"moment\";\r\n\r\nexport const NotesScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n\r\n    const [formValues, handleImputChange, reset] = useForm(note);\r\n\r\n    const { title, body, id, date } = formValues;\r\n\r\n    const activeId = useRef(note.id)\r\n    const noteDate = moment(date)\r\n\r\n    useEffect(() => {\r\n\r\n        if (note.id !== activeId.current) {\r\n\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n    }, [formValues, dispatch])\r\n\r\n\r\n\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleteNote(id))\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <div className=\"notes__appbar2\">\r\n                <div\r\n                    className=\"brain animate__animated animate__heartBeat animate__animated animate__slower  animate__infinite\t\"></div><span>{\r\n\r\n                        noteDate.format('LL')}</span></div>\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n\r\n                    placeholder=\"What is your idea?\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleImputChange}\r\n\r\n                />\r\n\r\n                <textarea\r\n                    className=\"note__textarea\"\r\n                    placeholder=\"raise your idea ...\"\r\n                    value={body}\r\n                    name='body'\r\n\r\n                    onChange={handleImputChange}\r\n\r\n\r\n                >   </textarea>\r\n\r\n                {\r\n\r\n\r\n                    (note.url)\r\n                    &&\r\n                    (<div >\r\n                        <img className=\"notes__image animate__animated animate__fadeInLeft\"\r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n\r\n                        />\r\n\r\n                    </div>)\r\n                }\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n\r\n\r\n            >\r\n                Delete\r\n\r\n</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\n\r\nexport const NothingtSelected = () => {\r\n    return (\r\n\r\n\r\n        <div className=\" nothing__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <div\r\n                className=\" brain2 animate__animated animate__fadeIn animate__fadeOut animate__delay-5s\t animate__animated animate__slower  animate__infinite\t\t\"></div>\r\n            <p>\r\n                selected someting\r\n                <br />\r\n                create an entry!\r\n\r\n            </p>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from \"moment\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from \"../../actions/notes\";\r\n\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const handleNoteActive = () => {\r\n\r\n        dispatch(activeNote(id, { date, title, body, url }))\r\n\r\n\r\n    };\r\n\r\n    const noteDate = moment(date)\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn\"\r\n            onClick={handleNoteActive} >\r\n\r\n            <div className=\"journal__entry-pyc\">\r\n\r\n\r\n\r\n\r\n                {\r\n                    url &&\r\n\r\n                    <div\r\n                        className=\"journal__entry-picture\"\r\n                        style={{\r\n\r\n                            backgroundImage: `url(${url})`,\r\n\r\n                        }}\r\n\r\n                    >\r\n                    </div>\r\n                }  <h3 className=\"journal__entry-title\">\r\n                    {title}\r\n\r\n                </h3>\r\n\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{\r\n\r\n                    noteDate.format('dddd')\r\n\r\n\r\n                }</span>\r\n                <h4>   {\r\n                    noteDate.format('ll')}  </h4>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries \">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry key={note.id}\r\n                        {...note}\r\n\r\n\r\n\r\n\r\n                    />\r\n                ))\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n\r\n});\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n\r\n});\r\nexport const starLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading\r\n    }\r\n\r\n};\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading\r\n    }\r\n};","import Swal from 'sweetalert2'\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { googleAuthProvider } from \"../firebase/firebaseConfig\";\r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, starLoading } from \"./ui\";\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n\r\n    return (dispatch) => {\r\n        dispatch(starLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n            }).catch(e => {\r\n                dispatch(finishLoading())\r\n                console.log(e)\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n\r\n\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const startLoginWithPasswordEmailName = (name, email, password) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name })\r\n                dispatch(login(user.uid, user.displayName))\r\n\r\n            })\r\n            .catch(e => {\r\n                return console.log(e)\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n};\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n\r\n        await firebase.auth().signOut()\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.logout\r\n\r\n    }\r\n};\r\n","import React, { useState } from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote, notesLogout } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n        dispatch(notesLogout())\r\n    };\r\n\r\n    const handleAddNote = () => {\r\n        dispatch(startNewNote())\r\n    };\r\n\r\n\r\n    const [estadoSidebar, setstate] = useState(true)\r\n\r\n    const handleChangeStateSidebar = () => {\r\n        if (estadoSidebar === true) { setstate(false) } else { setstate(true) }\r\n\r\n    };\r\n\r\n    if (estadoSidebar === true) {\r\n        return (<aside className=\"journal-sidebar animate__animated animate__fadeInDownBig animate__faster \"  >\r\n            <div className=\"contBtnSidebar\" > <span\r\n                onClick={handleChangeStateSidebar}\r\n                className=\"nav-var fas fa-bars\" id=\"btn-menu\"></span></div>\r\n\r\n\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <div\r\n                    className=\"journal__sidebar-logo\"\r\n\r\n                ></div>\r\n                <h3 >\r\n                    <i className=\"fas fa-clipboard-list\"></i>\r\n                    <span>  {name} </span>\r\n                </h3>\r\n\r\n\r\n                <div\r\n                    className=\"btn \"\r\n                    onClick={handleLogout}\r\n\r\n                >Logout</div>\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\"\r\n                onClick={handleAddNote}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\" />\r\n                <p>New idea</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n        )\r\n    } else {\r\n        return (<div className=\"contBtnSidebar animate__animated animate__fadeInUpBig animate__faster\" > <span\r\n            onClick={handleChangeStateSidebar}\r\n            className=\"nav-var fas fa-bars \" id=\"btn-menu\"></span></div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NotesScreen } from '../note/NotesScreen'\r\nimport { NothingtSelected } from './NothingtSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <div className=\"divZindex\"><Sidebar /></div>\r\n\r\n            <main className=\"zindex\">\r\n\r\n                {\r\n                    (active)\r\n                        ? (<NotesScreen />)\r\n                        : (<NothingtSelected />)\r\n\r\n                }\r\n\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [formValues, handleImputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    };\r\n\r\n    const handleGoogleLogin = (e) => {\r\n        dispatch(startGoogleLogin())\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn animate__faster\">\r\n            <h3 className=\"auth__title\">login</h3>\r\n            <form onSubmit={handleLogin}>\r\n\r\n\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__imput\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleImputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__imput\"\r\n                    autoComplete=\"off\"\r\n                    value={password}\r\n                    onChange={handleImputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/register\">\r\n                    Create new acount\r\n                </Link>\r\n\r\n            </form>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport validator from \"validator\";\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startLoginWithPasswordEmailName } from '../../actions/auth';\r\n\r\n\r\n\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(state => state.ui);\r\n    console.log(msgError\r\n    )\r\n    const [formValues, handleImputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n\r\n    })\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startLoginWithPasswordEmailName(name, email, password))\r\n        };\r\n    };\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('name is required'))\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'))\r\n\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('contraseña incorrecta'))\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn animate__faster\">\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form\r\n                onSubmit={handleRegister}>\r\n\r\n                {msgError &&\r\n\r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__imput\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleImputChange}\r\n                />\r\n\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__imput\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleImputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__imput\"\r\n                    autoComplete=\"off\"\r\n                    value={password}\r\n                    onChange={handleImputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__imput\"\r\n                    autoComplete=\"off\"\r\n                    value={password2}\r\n                    onChange={handleImputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\">\r\n                    Register\r\n                </button>\r\n\r\n\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/login\">\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n\r\n\r\n\r\n            <div className=\"auth__box-container\"> <Switch>\r\n\r\n                <Route exact path='/auth/login'\r\n                    component={LoginScreen} />\r\n                <Route exact path='/auth/register'\r\n                    component={RegisterScreen} />\r\n\r\n                <Redirect to='/auth/register' />\r\n\r\n\r\n            </Switch></div>\r\n\r\n\r\n        </div>)\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n\r\n\r\n}) => {\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n            (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to='/auth/login' />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n\r\n\r\n}) => {\r\n    return (\r\n\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n            (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};","import { db } from \"../firebase/firebaseConfig\";\r\n\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n\r\n        notes.push(\r\n            {\r\n                id: snapHijo.id,\r\n                ...snapHijo.data()\r\n            }\r\n        )\r\n\r\n\r\n    })\r\n\r\n\r\n    return notes;\r\n\r\n};","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from \"../firebase/firebaseConfig\";\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRouter } from './PrivateRouter';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { loadNotes } from '../hellpers/loadNotes';\r\nimport { setNotes } from '../actions/notes';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch()\r\n    const [gloLoading, setgloLoading] = useState(true)\r\n    const [inLogin, setinLogin] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setgloLoading(false)\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n\r\n                dispatch(login(user.uid, user.displayName))\r\n                setinLogin(true)\r\n\r\n                const notes = await loadNotes(user.uid);\r\n                dispatch(setNotes(notes));\r\n\r\n            } else {\r\n                setinLogin(false)\r\n            }\r\n\r\n        })\r\n\r\n    }, [dispatch, gloLoading, inLogin])\r\n\r\n\r\n    if (gloLoading) {\r\n        return <h1>Loading...</h1>\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <Router>\r\n\r\n            <Switch>\r\n                <PublicRoute\r\n\r\n                    path='/auth'\r\n                    component={AuthRouter}\r\n                    isAuthenticated={inLogin}\r\n\r\n                />\r\n\r\n\r\n                <PrivateRouter\r\n                    exact\r\n                    path='/'\r\n                    component={JournalScreen}\r\n                    isAuthenticated={inLogin}\r\n\r\n                />\r\n\r\n                <Redirect to='/auth/register' />\r\n\r\n            </Switch>\r\n\r\n\r\n\r\n        </Router>\r\n\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    action.payload,\r\n                    ...state.notes\r\n                ]\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n        case types.notesLoad:\r\n\r\n            return {\r\n                ...state,\r\n                notes: [\r\n                    ...action.payload\r\n                ]\r\n            }\r\n        case types.notesUpdate:\r\n\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n\r\n            }\r\n        case types.notesDelete:\r\n\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(\r\n                    note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleanin:\r\n\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...initialState,\r\n                msgError: action.payload\r\n            };\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...initialState,\r\n                msgError: null\r\n            };\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...initialState,\r\n                loading: true\r\n            };\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...initialState,\r\n                loading: false\r\n            };\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { AppRouter } from './Routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n\r\n        </Provider>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}